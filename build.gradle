plugins {
    id 'java'
    id 'jacoco'
    id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin' version '1.71.4'
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.palantir.docker" version "0.22.1"
}

group 'io.keepup'
version '1.0'

repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    implementation {
        exclude group: 'org.springframework', module: 'spring-webmvc'
    }
}

dependencies {
    implementation 'ru.keepupproject:keepup-core:2.0.0-beta-1'
    implementation 'ru.keepupproject:keepup-catalog:2.0.0-beta-1'
    implementation 'ru.keepupproject:keepup-rest:2.0.0-beta-1'
    implementation 'ru.keepupproject:keepup-admin-ui:2.0.0-beta-1'

    implementation 'org.postgresql:postgresql:42.2.24'
    implementation 'io.r2dbc:r2dbc-postgresql:0.8.10.RELEASE'

    implementation 'io.r2dbc:r2dbc-h2:0.8.4.RELEASE'

    // region implementation from keepup
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.11.0'
//    implementation 'org.hibernate:hibernate-core:5.5.3.Final'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.liquibase:liquibase-core'
    implementation 'io.fastjson:boon:0.34'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'commons-net:commons-net:3.8.0'
    // endregion

    implementation 'org.apache.poi:poi:5.0.0'
    implementation 'org.apache.poi:poi-ooxml:5.0.0'
    implementation 'org.springframework.data:spring-data-redis:2.6.1'

    testImplementation 'org.junit.platform:junit-platform-runner:1.7.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

docker {
    dependsOn build
    name "docker:5000/keepup/${project.name}:1_0"
    files 'build/libs/keepup-base-app-1.0.jar'
    buildArgs(['JAR_FILE': "${bootJar.archiveFileName.get()}"])
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

task generateGitChangelogInlineTemplate(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    fromRepo = file(".");
    file = new File("CHANGELOG.md");
    templateContent = """
# Changelog
Changelog
{{#tags}}
## {{name}}
 {{#issues}}
  {{#hasLink}}
### {{name}} [{{issue}}]({{link}}) {{title}}
  {{/hasLink}}
  {{^hasLink}}
### {{name}}
  {{/hasLink}}
  {{#commits}}
[{{hash}}](https://github.com/FedorSergeev/keepup-base-app/commit/{{hash}}) {{authorName}} *{{commitTime}}*
{{{message}}}
  {{/commits}}
 {{/issues}}
{{/tags}}
 """;
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

def getTag() {
    return versionDetails().branchName == null
            ? version
            : versionDetails().branchName.replace('/', '-')
}
